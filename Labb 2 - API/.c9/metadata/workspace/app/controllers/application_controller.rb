{"changed":true,"filter":false,"title":"application_controller.rb","tooltip":"/app/controllers/application_controller.rb","value":"class ApplicationController < ActionController::Base\n  \n  \n   protect_from_forgery with: :null_session\n    #protect_from_forgery with: :exception\n  \n  include SessionsHelper\n  \n  \n  before_action :check_apikey\n  \n  respond_to :json\n  \n  rescue_from ActionController::UnknownFormat, with: :raise_bad_format\n  rescue_from ActiveRecord::RecordNotFound, with: :record_not_found\n  \n  OFFSET = 0\n  LIMIT = 20\n  \n  protected\n\n  def offset_params\n    if params[:offset].present?\n      @offset = params[:offset].to_i\n    end\n    if params[:limit].present?\n      @limit = params[:limit].to_i\n    end\n\n    @offset ||= OFFSET\n    @limit  ||= LIMIT\n  end\n  \n   def record_not_found\n     @error = ErrorMessage.new(\"Resursen hittades inte\", \"Turistplatsen hittades inte\")\n    respond_with @error, status: :not_found\n  end\n\n  def raise_bad_format\n    @error = ErrorMessage.new(\"API:et stöder inte formatet som är begärd \", \"API:et stöder inte formatet som är begärd\")\n    respond_with @error, status: :bad_request\n  end\n  \n    def check_apikey\n    apikey = request.headers['X-ApiKey']\n    @apiuser = ApiKey.where(apikey: apikey).first if apikey\n    unless @apiuser\n      self.headers['WWW-Authenticate'] = 'Token realm = \"Places\"'\n      render json: { error: \"API-nyckel måste inkluderas\" }, status: :forbidden\n      return false\n    end\n  end\n  \nend\n\n class ErrorMessage\n  \n  def initialize(dev_mess, usr_mess)\n    @developerMessage = dev_mess\n    @userMessage = usr_mess\n  end\n  \nend\n","undoManager":{"mark":55,"position":98,"stack":[[{"start":{"row":3,"column":39},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":4,"column":0},"end":{"row":4,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":4,"column":2},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":5,"column":0},"end":{"row":5,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":5,"column":2},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":5,"column":2},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":6,"column":0},"end":{"row":6,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":6,"column":2},"end":{"row":67,"column":5},"action":"insert","lines":["  protect_from_forgery with: :null_session","  ","  include SessionsHelper","  ","  before_action :check_apikey","  ","  respond_to :json","  ","  rescue_from ActionController::UnknownFormat, with: :raise_bad_format","  rescue_from ActiveRecord::RecordNotFound, with: :record_not_found","  ","  #Default-värden för offset och limit","  OFFSET = 0","  LIMIT = 20","  ","  protected","  ","  #Sätter offset och limit till de värden som skickats med,","  def offset_params","    if params[:offset].present?","      @offset = params[:offset].to_i","    end","    if params[:limit].present?","      @limit = params[:limit].to_i","    end","    #annars till default-värden om inga värden skickats med","    @offset ||= OFFSET","    @limit  ||= LIMIT","  end","  ","  #Kontrollerar om anrop har gjorts med en giltig API-nyckel ","  #(http://blog.joshsoftware.com/2014/05/08/implementing-rails-apis-like-a-professional)","  def check_apikey","    apikey = request.headers['X-ApiKey']","    @apiuser = ApiUser.where(apikey: apikey).first if apikey","    unless @apiuser","      self.headers['WWW-Authenticate'] = 'Token realm = \"Attractions\"'","      render json: { error: \"API-nyckel måste inkluderas\" }, status: :forbidden","      return false","    end","  end","  ","  #Felhantering","  ","  def raise_bad_format","    @error = ErrorMessage.new(\"API:et stöder inte det begärda formatet\", \"API:et stöder inte det begärda formatet\")","    respond_with @error, status: :bad_request","  end","  ","  def record_not_found","     @error = ErrorMessage.new(\"Resursen hittades ej\", \"Turistattraktionen hittades ej\")","    respond_with @error, status: :not_found","  end","","end",""," class ErrorMessage","  ","  def initialize(dev_mess, usr_mess)","    @developerMessage = dev_mess","    @userMessage = usr_mess","  end"],"id":6}],[{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["#"],"id":7}],[{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"remove","lines":["#"],"id":8}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"insert","lines":["#"],"id":9}],[{"start":{"row":8,"column":24},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":9,"column":0},"end":{"row":9,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":9,"column":2},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":10,"column":0},"end":{"row":10,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":10,"column":2},"end":{"row":11,"column":42},"action":"insert","lines":["include ActionController::MimeResponds","  include ActionController::ImplicitRender"],"id":12}],[{"start":{"row":10,"column":2},"end":{"row":10,"column":40},"action":"remove","lines":["include ActionController::MimeResponds"],"id":15}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":42},"action":"remove","lines":["  ","  include ActionController::ImplicitRender"],"id":16}],[{"start":{"row":9,"column":2},"end":{"row":10,"column":0},"action":"remove","lines":["",""],"id":17}],[{"start":{"row":41,"column":18},"end":{"row":41,"column":22},"action":"remove","lines":["User"],"id":18},{"start":{"row":41,"column":18},"end":{"row":41,"column":19},"action":"insert","lines":["K"]}],[{"start":{"row":41,"column":19},"end":{"row":41,"column":20},"action":"insert","lines":["e"],"id":19}],[{"start":{"row":41,"column":20},"end":{"row":41,"column":21},"action":"insert","lines":["y"],"id":20}],[{"start":{"row":37,"column":0},"end":{"row":38,"column":88},"action":"remove","lines":["  #Kontrollerar om anrop har gjorts med en giltig API-nyckel ","  #(http://blog.joshsoftware.com/2014/05/08/implementing-rails-apis-like-a-professional)"],"id":21}],[{"start":{"row":47,"column":0},"end":{"row":48,"column":15},"action":"remove","lines":["  ","  #Felhantering"],"id":22}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":38},"action":"remove","lines":["  #Default-värden för offset och limit"],"id":23}],[{"start":{"row":17,"column":2},"end":{"row":18,"column":0},"action":"remove","lines":["",""],"id":24}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":59},"action":"remove","lines":["  ","  #Sätter offset och limit till de värden som skickats med,"],"id":25}],[{"start":{"row":1,"column":0},"end":{"row":3,"column":40},"action":"remove","lines":["  # Prevent CSRF attacks by raising an exception.","  # For APIs, you may want to use :null_session instead.","  #protect_from_forgery with: :exception"],"id":26}],[{"start":{"row":0,"column":52},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":27}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":59},"action":"remove","lines":["    #annars till default-värden om inga värden skickats med"],"id":28}],[{"start":{"row":49,"column":0},"end":{"row":52,"column":5},"action":"remove","lines":["  def record_not_found","     @error = ErrorMessage.new(\"Resursen hittades ej\", \"Turistattraktionen hittades ej\")","    respond_with @error, status: :not_found","  end"],"id":29}],[{"start":{"row":41,"column":5},"end":{"row":42,"column":0},"action":"insert","lines":["",""],"id":30},{"start":{"row":42,"column":0},"end":{"row":42,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":42,"column":2},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":31},{"start":{"row":43,"column":0},"end":{"row":43,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":43,"column":2},"end":{"row":46,"column":5},"action":"insert","lines":["  def record_not_found","     @error = ErrorMessage.new(\"Resursen hittades ej\", \"Turistattraktionen hittades ej\")","    respond_with @error, status: :not_found","  end"],"id":32}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":2},"action":"remove","lines":["  "],"id":33}],[{"start":{"row":47,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["",""],"id":34}],[{"start":{"row":43,"column":2},"end":{"row":43,"column":4},"action":"remove","lines":["  "],"id":35}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":2},"action":"remove","lines":["  "],"id":36}],[{"start":{"row":43,"column":0},"end":{"row":43,"column":1},"action":"insert","lines":[" "],"id":37}],[{"start":{"row":43,"column":1},"end":{"row":43,"column":2},"action":"insert","lines":[" "],"id":38}],[{"start":{"row":43,"column":2},"end":{"row":43,"column":3},"action":"insert","lines":[" "],"id":39}],[{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["",""],"id":40}],[{"start":{"row":52,"column":2},"end":{"row":53,"column":0},"action":"remove","lines":["",""],"id":41}],[{"start":{"row":33,"column":0},"end":{"row":41,"column":5},"action":"remove","lines":["  def check_apikey","    apikey = request.headers['X-ApiKey']","    @apiuser = ApiKey.where(apikey: apikey).first if apikey","    unless @apiuser","      self.headers['WWW-Authenticate'] = 'Token realm = \"Attractions\"'","      render json: { error: \"API-nyckel måste inkluderas\" }, status: :forbidden","      return false","    end","  end"],"id":50}],[{"start":{"row":43,"column":5},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":51},{"start":{"row":44,"column":0},"end":{"row":44,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":44,"column":2},"end":{"row":45,"column":0},"action":"insert","lines":["",""],"id":52},{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"insert","lines":["  "]},{"start":{"row":45,"column":2},"end":{"row":53,"column":5},"action":"insert","lines":["  def check_apikey","    apikey = request.headers['X-ApiKey']","    @apiuser = ApiKey.where(apikey: apikey).first if apikey","    unless @apiuser","      self.headers['WWW-Authenticate'] = 'Token realm = \"Attractions\"'","      render json: { error: \"API-nyckel måste inkluderas\" }, status: :forbidden","      return false","    end","  end"]}],[{"start":{"row":32,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["",""],"id":53}],[{"start":{"row":31,"column":2},"end":{"row":32,"column":0},"action":"remove","lines":["",""],"id":54}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":2},"action":"remove","lines":["  "],"id":55}],[{"start":{"row":30,"column":5},"end":{"row":31,"column":0},"action":"remove","lines":["",""],"id":56}],[{"start":{"row":3,"column":4},"end":{"row":3,"column":5},"action":"insert","lines":["/"],"id":57}],[{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"insert","lines":["/"],"id":58}],[{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"remove","lines":["/"],"id":59}],[{"start":{"row":3,"column":4},"end":{"row":3,"column":5},"action":"remove","lines":["/"],"id":60}],[{"start":{"row":3,"column":4},"end":{"row":3,"column":5},"action":"insert","lines":["#"],"id":61}],[{"start":{"row":3,"column":45},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":62},{"start":{"row":4,"column":0},"end":{"row":4,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":4,"column":4},"end":{"row":4,"column":41},"action":"insert","lines":["protect_from_forgery with: :exception"],"id":63}],[{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":["#"],"id":64}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":4},"action":"remove","lines":["  "],"id":65}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"remove","lines":["#"],"id":66}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"insert","lines":[" "],"id":67}],[{"start":{"row":34,"column":84},"end":{"row":34,"column":86},"action":"remove","lines":["ej"],"id":68},{"start":{"row":34,"column":84},"end":{"row":34,"column":85},"action":"insert","lines":["i"]}],[{"start":{"row":34,"column":85},"end":{"row":34,"column":86},"action":"insert","lines":["n"],"id":69}],[{"start":{"row":34,"column":86},"end":{"row":34,"column":87},"action":"insert","lines":["t"],"id":70}],[{"start":{"row":34,"column":87},"end":{"row":34,"column":88},"action":"insert","lines":["e"],"id":71}],[{"start":{"row":34,"column":64},"end":{"row":34,"column":74},"action":"remove","lines":["traktionen"],"id":72}],[{"start":{"row":34,"column":63},"end":{"row":34,"column":64},"action":"remove","lines":["t"],"id":73}],[{"start":{"row":34,"column":62},"end":{"row":34,"column":63},"action":"remove","lines":["a"],"id":74}],[{"start":{"row":34,"column":62},"end":{"row":34,"column":63},"action":"insert","lines":["p"],"id":75}],[{"start":{"row":34,"column":63},"end":{"row":34,"column":64},"action":"insert","lines":["l"],"id":76}],[{"start":{"row":34,"column":64},"end":{"row":34,"column":65},"action":"insert","lines":["a"],"id":77}],[{"start":{"row":34,"column":65},"end":{"row":34,"column":66},"action":"insert","lines":["t"],"id":78}],[{"start":{"row":34,"column":66},"end":{"row":34,"column":67},"action":"insert","lines":["s"],"id":79}],[{"start":{"row":34,"column":67},"end":{"row":34,"column":68},"action":"insert","lines":["e"],"id":80}],[{"start":{"row":34,"column":68},"end":{"row":34,"column":69},"action":"insert","lines":["n"],"id":81}],[{"start":{"row":34,"column":50},"end":{"row":34,"column":52},"action":"remove","lines":["ej"],"id":82},{"start":{"row":34,"column":50},"end":{"row":34,"column":51},"action":"insert","lines":["i"]}],[{"start":{"row":34,"column":51},"end":{"row":34,"column":52},"action":"insert","lines":["n"],"id":83}],[{"start":{"row":34,"column":52},"end":{"row":34,"column":53},"action":"insert","lines":["t"],"id":84}],[{"start":{"row":34,"column":53},"end":{"row":34,"column":54},"action":"insert","lines":["e"],"id":85}],[{"start":{"row":39,"column":50},"end":{"row":39,"column":62},"action":"remove","lines":["det begärda "],"id":86}],[{"start":{"row":39,"column":58},"end":{"row":39,"column":59},"action":"insert","lines":[" "],"id":87}],[{"start":{"row":39,"column":59},"end":{"row":39,"column":60},"action":"insert","lines":["s"],"id":88}],[{"start":{"row":39,"column":60},"end":{"row":39,"column":61},"action":"insert","lines":["o"],"id":89}],[{"start":{"row":39,"column":61},"end":{"row":39,"column":62},"action":"insert","lines":["m"],"id":90}],[{"start":{"row":39,"column":62},"end":{"row":39,"column":63},"action":"insert","lines":[" "],"id":91}],[{"start":{"row":39,"column":63},"end":{"row":39,"column":75},"action":"insert","lines":["det begärda "],"id":92}],[{"start":{"row":39,"column":66},"end":{"row":39,"column":67},"action":"remove","lines":[" "],"id":93}],[{"start":{"row":39,"column":65},"end":{"row":39,"column":66},"action":"remove","lines":["t"],"id":94}],[{"start":{"row":39,"column":64},"end":{"row":39,"column":65},"action":"remove","lines":["e"],"id":95}],[{"start":{"row":39,"column":63},"end":{"row":39,"column":64},"action":"remove","lines":["d"],"id":96}],[{"start":{"row":39,"column":69},"end":{"row":39,"column":70},"action":"remove","lines":["a"],"id":97}],[{"start":{"row":39,"column":63},"end":{"row":39,"column":64},"action":"insert","lines":["ä"],"id":98}],[{"start":{"row":39,"column":64},"end":{"row":39,"column":65},"action":"insert","lines":["r"],"id":99}],[{"start":{"row":39,"column":65},"end":{"row":39,"column":66},"action":"insert","lines":[" "],"id":100}],[{"start":{"row":39,"column":97},"end":{"row":39,"column":108},"action":"remove","lines":["et begärda "],"id":101}],[{"start":{"row":39,"column":96},"end":{"row":39,"column":97},"action":"remove","lines":["d"],"id":102}],[{"start":{"row":39,"column":104},"end":{"row":39,"column":105},"action":"insert","lines":[" "],"id":103}],[{"start":{"row":39,"column":105},"end":{"row":39,"column":119},"action":"insert","lines":["som är begärd "],"id":104}],[{"start":{"row":39,"column":118},"end":{"row":39,"column":119},"action":"remove","lines":[" "],"id":105}],[{"start":{"row":47,"column":57},"end":{"row":47,"column":67},"action":"remove","lines":["Attraction"],"id":106},{"start":{"row":47,"column":57},"end":{"row":47,"column":58},"action":"insert","lines":["P"]}],[{"start":{"row":47,"column":58},"end":{"row":47,"column":59},"action":"insert","lines":["l"],"id":107}],[{"start":{"row":47,"column":59},"end":{"row":47,"column":60},"action":"insert","lines":["a"],"id":108}],[{"start":{"row":47,"column":60},"end":{"row":47,"column":61},"action":"insert","lines":["c"],"id":109}],[{"start":{"row":47,"column":61},"end":{"row":47,"column":62},"action":"insert","lines":["e"],"id":110}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":53,"column":3},"end":{"row":53,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1456332989813}