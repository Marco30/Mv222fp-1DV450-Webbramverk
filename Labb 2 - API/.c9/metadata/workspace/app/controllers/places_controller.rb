{"changed":true,"filter":false,"title":"places_controller.rb","tooltip":"/app/controllers/places_controller.rb","value":"class PlacesController < ApplicationController\n    \n  before_action :api_authenticate, only: [:create, :update, :destroy]\n  before_action :offset_params, only: [:index]\n  \n  def index\n\n    if params[:user_id].present?\n      @user = User.find(params[:user_id])\n      @places = @user.places.limit(@limit).offset(@offset)\n\n    elsif params[:tag_id].present?\n      @tag = Tag.find(params[:tag_id])\n      @places = @tag.places.limit(@limit).offset(@offset)\n\n    elsif params[:latitude].present? && params[:longitude].present?\n\n      @places = Place.limit(@limit).offset(@offset).near([params[:latitude], params[:longitude]], 80, :units => :km)\n\n    elsif params[:address].present?\n      address_param = params[:address]\n      @places = Place.limit(@limit).offset(@offset).where(\"address LIKE (?)\", \"%#{address_param}%\")\n\n    else\n      @places = Place.limit(@limit).offset(@offset).all.order(\"created_at DESC\")\n    end\n    respond_with @places\n  end\n  \n  \n def update\n    place  = Place.find_by_id(params[:id].to_i)\n    \n    if place \n      attraction.tags.delete_all\n      user = place.user\n      \n      if @token_payload[\"user_id\"].to_i == user.id\n       place.update(place_params)\n        if place.save\n          render json: place, status: :ok\n        else\n          error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistplatsen kunde inte uppdateras\")\n          render json: error, status: :bad_request\n        end\n      else\n        error = ErrorMessage.new(\"Du får inte uppdatera denna resurs.\", \"Du kan inte uppdatera denna turistplatsen\")\n        render json: error, status: :forbidden\n      end\n    else\n      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistplatsen kunde inte uppdateras\")\n      render json: error, status: :bad_request\n    end\n  end\n\n\n  def create\n    place = Place.new(place_params)\n    \n    place.user_id = @token_payload[\"user_id\"]\n    \n    if place.save\n      respond_with place, status: :created\n    else\n      error = ErrorMessage.new(\"Resursen kunde inte skapas\", \"Turistplatsen kunde inte skapas\")\n      render json: error, status: :bad_request\n    end\n  end\n  \n    def show\n    @place = Place.find(params[:id])\n    render json: @place , :include => :tags\n  end\n  \n  \n    def destroy\n    place = Place.find_by_id(params[:id].to_i)\n    \n    if place\n      user = place.user\n      \n      if @token_payload[\"user_id\"].to_i == user.id\n        if place.destroy\n          respond_with status: :no_content\n        else\n          error = ErrorMessage.new(\"Resursen kunde inte raderas\", \"Turistplatsen kunde inte raderas\")\n          render json: error, status: :bad_request\n        end\n      else\n        error = ErrorMessage.new(\"Du får inte radera denna resurs\", \"Du kan inte radera denna platsen\")\n        render json: error, status: :forbidden\n      end\n    else\n      error = ErrorMessage.new(\"Resursen kunde inte raderas\", \"Turistpaltsen kunde inte raderas\")\n      render json: error, status: :bad_request\n    end\n  end\n\n  \n  private\n  \n  def place_params\n    json_params = ActionController::Parameters.new(JSON.parse(request.body.read))\n    json_params.require(:place).permit(:address, :latitude, :longitude, tag_ids: [] )\n  end\n    \nend\n","undoManager":{"mark":35,"position":100,"stack":[[{"start":{"row":80,"column":13},"end":{"row":80,"column":23},"action":"remove","lines":["attraction"],"id":63},{"start":{"row":80,"column":13},"end":{"row":80,"column":18},"action":"insert","lines":["place"]}],[{"start":{"row":83,"column":11},"end":{"row":83,"column":21},"action":"remove","lines":["attraction"],"id":64},{"start":{"row":83,"column":11},"end":{"row":83,"column":16},"action":"insert","lines":["place"]}],[{"start":{"row":101,"column":6},"end":{"row":101,"column":16},"action":"remove","lines":["attraction"],"id":65},{"start":{"row":101,"column":6},"end":{"row":101,"column":11},"action":"insert","lines":["place"]}],[{"start":{"row":58,"column":20},"end":{"row":58,"column":30},"action":"remove","lines":["attraction"],"id":66},{"start":{"row":58,"column":20},"end":{"row":58,"column":25},"action":"insert","lines":["place"]}],[{"start":{"row":103,"column":25},"end":{"row":103,"column":35},"action":"remove","lines":["attraction"],"id":69},{"start":{"row":103,"column":25},"end":{"row":103,"column":30},"action":"insert","lines":["place"]}],[{"start":{"row":49,"column":0},"end":{"row":49,"column":33},"action":"remove","lines":["  #Uppdaterar en turistattraktion"],"id":70}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":29},"action":"remove","lines":["  #Skapar ny turistattraktion"],"id":71}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":36},"action":"remove","lines":["  #Visar en enskild turistattraktion"],"id":72}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":69},"action":"remove","lines":["    #eller samtliga turistattraktioner sorterade enligt senaste datum"],"id":73}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":110},"action":"remove","lines":["    #samtliga turistattraktioner som har ett namn liknande det som skickats med (URL .../places?address=värde)"],"id":74}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":30},"action":"remove","lines":["      #Metod från gem Geocoder"],"id":75}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":133},"action":"remove","lines":["    #samtliga turistattraktioner som inte ligger längre än 80 km ifrån en viss plats (URL .../places?latitude=värde&longitude=värde),"],"id":76}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":58},"action":"remove","lines":["    #samtliga turistattraktioner tillhörande en viss tagg,"],"id":77}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":68},"action":"remove","lines":["    #Visar samtliga turistattraktioner skapade av en viss användare,"],"id":78}],[{"start":{"row":75,"column":0},"end":{"row":75,"column":30},"action":"remove","lines":["  #Raderar en turistattraktion"],"id":79}],[{"start":{"row":76,"column":0},"end":{"row":97,"column":5},"action":"remove","lines":["  def destroy","    place = Place.find_by_id(params[:id].to_i)","    ","    if place","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","        if place.destroy","          respond_with status: :no_content","        else","          error = ErrorMessage.new(\"Resursen kunde inte raderas\", \"Turistattraktionen kunde inte raderas\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte radera denna resurs.\", \"Du får inte radera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":80}],[{"start":{"row":48,"column":2},"end":{"row":49,"column":0},"action":"insert","lines":["",""],"id":81},{"start":{"row":49,"column":0},"end":{"row":49,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":49,"column":2},"end":{"row":70,"column":5},"action":"insert","lines":["  def destroy","    place = Place.find_by_id(params[:id].to_i)","    ","    if place","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","        if place.destroy","          respond_with status: :no_content","        else","          error = ErrorMessage.new(\"Resursen kunde inte raderas\", \"Turistattraktionen kunde inte raderas\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte radera denna resurs.\", \"Du får inte radera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":82}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"remove","lines":[" "],"id":83}],[{"start":{"row":2,"column":2},"end":{"row":2,"column":4},"action":"remove","lines":["  "],"id":84}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":2},"action":"remove","lines":["  "],"id":85}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":[" "],"id":86}],[{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":[" "],"id":87}],[{"start":{"row":30,"column":0},"end":{"row":34,"column":2},"action":"remove","lines":["  def show","    @place = Place.find(params[:id])","    render json: @place , :include => :tags","  end","  "],"id":88}],[{"start":{"row":43,"column":5},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":89},{"start":{"row":44,"column":0},"end":{"row":44,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":44,"column":2},"end":{"row":45,"column":0},"action":"insert","lines":["",""],"id":90},{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":45,"column":2},"end":{"row":49,"column":2},"action":"insert","lines":["  def show","    @place = Place.find(params[:id])","    render json: @place , :include => :tags","  end","  "],"id":91}],[{"start":{"row":74,"column":1},"end":{"row":97,"column":5},"action":"remove","lines":[" def update","    place  = Place.find_by_id(params[:id].to_i)","    ","    if place ","      attraction.tags.delete_all","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","       place.update(place_params)","        if place.save","          render json: place, status: :ok","        else","          error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte uppdatera denna resurs.\", \"Du får inte uppdatera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":92}],[{"start":{"row":29,"column":0},"end":{"row":52,"column":5},"action":"insert","lines":[" def update","    place  = Place.find_by_id(params[:id].to_i)","    ","    if place ","      attraction.tags.delete_all","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","       place.update(place_params)","        if place.save","          render json: place, status: :ok","        else","          error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte uppdatera denna resurs.\", \"Du får inte uppdatera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":93}],[{"start":{"row":28,"column":2},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":94},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":99,"column":2},"end":{"row":100,"column":0},"action":"remove","lines":["",""],"id":95}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"remove","lines":["  "],"id":96}],[{"start":{"row":98,"column":1},"end":{"row":99,"column":0},"action":"remove","lines":["",""],"id":97}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":1},"action":"remove","lines":[" "],"id":98}],[{"start":{"row":97,"column":0},"end":{"row":98,"column":0},"action":"remove","lines":["",""],"id":99}],[{"start":{"row":96,"column":5},"end":{"row":97,"column":0},"action":"remove","lines":["",""],"id":100}],[{"start":{"row":85,"column":73},"end":{"row":85,"column":86},"action":"remove","lines":["attraktionen "],"id":113},{"start":{"row":85,"column":73},"end":{"row":85,"column":74},"action":"insert","lines":["p"]}],[{"start":{"row":85,"column":74},"end":{"row":85,"column":75},"action":"insert","lines":["l"],"id":114}],[{"start":{"row":85,"column":75},"end":{"row":85,"column":76},"action":"insert","lines":["a"],"id":115}],[{"start":{"row":85,"column":76},"end":{"row":85,"column":77},"action":"insert","lines":["t"],"id":116}],[{"start":{"row":85,"column":77},"end":{"row":85,"column":78},"action":"insert","lines":["s"],"id":117}],[{"start":{"row":85,"column":78},"end":{"row":85,"column":79},"action":"insert","lines":["e"],"id":118}],[{"start":{"row":85,"column":79},"end":{"row":85,"column":80},"action":"insert","lines":["n"],"id":119}],[{"start":{"row":85,"column":80},"end":{"row":85,"column":81},"action":"insert","lines":[" "],"id":120}],[{"start":{"row":89,"column":111},"end":{"row":89,"column":112},"action":"remove","lines":["."],"id":121}],[{"start":{"row":89,"column":95},"end":{"row":89,"column":111},"action":"remove","lines":["turistattraktion"],"id":122},{"start":{"row":89,"column":95},"end":{"row":89,"column":96},"action":"insert","lines":["p"]}],[{"start":{"row":89,"column":96},"end":{"row":89,"column":97},"action":"insert","lines":["l"],"id":123}],[{"start":{"row":89,"column":97},"end":{"row":89,"column":98},"action":"insert","lines":["a"],"id":124}],[{"start":{"row":89,"column":98},"end":{"row":89,"column":99},"action":"insert","lines":["t"],"id":125}],[{"start":{"row":89,"column":99},"end":{"row":89,"column":100},"action":"insert","lines":["s"],"id":126}],[{"start":{"row":89,"column":100},"end":{"row":89,"column":101},"action":"insert","lines":["e"],"id":127}],[{"start":{"row":89,"column":101},"end":{"row":89,"column":102},"action":"insert","lines":["n"],"id":128}],[{"start":{"row":85,"column":73},"end":{"row":85,"column":74},"action":"insert","lines":[" "],"id":129}],[{"start":{"row":93,"column":72},"end":{"row":93,"column":84},"action":"remove","lines":["attraktionen"],"id":130}],[{"start":{"row":93,"column":72},"end":{"row":93,"column":73},"action":"insert","lines":[" "],"id":131}],[{"start":{"row":93,"column":73},"end":{"row":93,"column":74},"action":"insert","lines":["p"],"id":132}],[{"start":{"row":93,"column":74},"end":{"row":93,"column":75},"action":"insert","lines":["a"],"id":133}],[{"start":{"row":93,"column":75},"end":{"row":93,"column":76},"action":"insert","lines":["l"],"id":134}],[{"start":{"row":93,"column":76},"end":{"row":93,"column":77},"action":"insert","lines":["t"],"id":135}],[{"start":{"row":93,"column":77},"end":{"row":93,"column":78},"action":"insert","lines":["s"],"id":136}],[{"start":{"row":93,"column":78},"end":{"row":93,"column":79},"action":"insert","lines":["e"],"id":137}],[{"start":{"row":93,"column":79},"end":{"row":93,"column":80},"action":"insert","lines":["n"],"id":138}],[{"start":{"row":93,"column":72},"end":{"row":93,"column":73},"action":"remove","lines":[" "],"id":139}],[{"start":{"row":85,"column":73},"end":{"row":85,"column":74},"action":"remove","lines":[" "],"id":140}],[{"start":{"row":89,"column":65},"end":{"row":89,"column":66},"action":"remove","lines":["."],"id":141}],[{"start":{"row":64,"column":68},"end":{"row":64,"column":80},"action":"remove","lines":["attraktionen"],"id":142}],[{"start":{"row":64,"column":68},"end":{"row":64,"column":69},"action":"insert","lines":["p"],"id":143}],[{"start":{"row":64,"column":69},"end":{"row":64,"column":70},"action":"insert","lines":["l"],"id":144}],[{"start":{"row":64,"column":70},"end":{"row":64,"column":71},"action":"insert","lines":["a"],"id":145}],[{"start":{"row":64,"column":71},"end":{"row":64,"column":72},"action":"insert","lines":["t"],"id":146}],[{"start":{"row":64,"column":72},"end":{"row":64,"column":73},"action":"insert","lines":["s"],"id":147}],[{"start":{"row":64,"column":73},"end":{"row":64,"column":74},"action":"insert","lines":["e"],"id":148}],[{"start":{"row":64,"column":74},"end":{"row":64,"column":75},"action":"insert","lines":["n"],"id":149}],[{"start":{"row":50,"column":72},"end":{"row":50,"column":84},"action":"remove","lines":["attraktionen"],"id":150},{"start":{"row":50,"column":72},"end":{"row":50,"column":79},"action":"insert","lines":["platsen"]}],[{"start":{"row":42,"column":76},"end":{"row":42,"column":88},"action":"remove","lines":["attraktionen"],"id":151},{"start":{"row":42,"column":76},"end":{"row":42,"column":83},"action":"insert","lines":["platsen"]}],[{"start":{"row":46,"column":107},"end":{"row":46,"column":118},"action":"remove","lines":["attraktion."],"id":152},{"start":{"row":46,"column":107},"end":{"row":46,"column":114},"action":"insert","lines":["platsen"]}],[{"start":{"row":93,"column":52},"end":{"row":93,"column":62},"action":"remove","lines":["uppdateras"],"id":153},{"start":{"row":93,"column":52},"end":{"row":93,"column":53},"action":"insert","lines":["r"]}],[{"start":{"row":93,"column":53},"end":{"row":93,"column":54},"action":"insert","lines":["a"],"id":154}],[{"start":{"row":93,"column":54},"end":{"row":93,"column":55},"action":"insert","lines":["d"],"id":155}],[{"start":{"row":93,"column":55},"end":{"row":93,"column":56},"action":"insert","lines":["e"],"id":156}],[{"start":{"row":93,"column":56},"end":{"row":93,"column":57},"action":"insert","lines":["r"],"id":157}],[{"start":{"row":93,"column":57},"end":{"row":93,"column":58},"action":"insert","lines":["a"],"id":158}],[{"start":{"row":93,"column":58},"end":{"row":93,"column":59},"action":"insert","lines":["s"],"id":159}],[{"start":{"row":93,"column":88},"end":{"row":93,"column":98},"action":"remove","lines":["uppdateras"],"id":160},{"start":{"row":93,"column":88},"end":{"row":93,"column":89},"action":"insert","lines":["r"]}],[{"start":{"row":93,"column":89},"end":{"row":93,"column":90},"action":"insert","lines":["a"],"id":161}],[{"start":{"row":93,"column":90},"end":{"row":93,"column":91},"action":"insert","lines":["d"],"id":162}],[{"start":{"row":93,"column":91},"end":{"row":93,"column":92},"action":"insert","lines":["e"],"id":163}],[{"start":{"row":93,"column":92},"end":{"row":93,"column":93},"action":"insert","lines":["r"],"id":164}],[{"start":{"row":93,"column":93},"end":{"row":93,"column":94},"action":"insert","lines":["a"],"id":165}],[{"start":{"row":93,"column":94},"end":{"row":93,"column":95},"action":"insert","lines":["s"],"id":166}],[{"start":{"row":46,"column":77},"end":{"row":46,"column":80},"action":"remove","lines":["år "],"id":167}],[{"start":{"row":46,"column":76},"end":{"row":46,"column":77},"action":"remove","lines":["f"],"id":168}],[{"start":{"row":46,"column":76},"end":{"row":46,"column":77},"action":"insert","lines":["k"],"id":169}],[{"start":{"row":46,"column":77},"end":{"row":46,"column":78},"action":"insert","lines":["a"],"id":170}],[{"start":{"row":46,"column":78},"end":{"row":46,"column":79},"action":"insert","lines":["n"],"id":171}],[{"start":{"row":46,"column":79},"end":{"row":46,"column":80},"action":"insert","lines":[" "],"id":172}],[{"start":{"row":89,"column":72},"end":{"row":89,"column":75},"action":"remove","lines":["får"],"id":173},{"start":{"row":89,"column":72},"end":{"row":89,"column":73},"action":"insert","lines":["l"]}],[{"start":{"row":89,"column":72},"end":{"row":89,"column":73},"action":"remove","lines":["l"],"id":174}],[{"start":{"row":89,"column":72},"end":{"row":89,"column":73},"action":"insert","lines":["k"],"id":175}],[{"start":{"row":89,"column":73},"end":{"row":89,"column":74},"action":"insert","lines":["a"],"id":176}],[{"start":{"row":89,"column":74},"end":{"row":89,"column":75},"action":"insert","lines":["n"],"id":177}]]},"ace":{"folds":[],"scrolltop":1353.4165573120117,"scrollleft":0,"selection":{"start":{"row":91,"column":9},"end":{"row":91,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1456259144000}