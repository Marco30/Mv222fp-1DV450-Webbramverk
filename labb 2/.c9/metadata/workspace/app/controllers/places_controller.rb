{"filter":false,"title":"places_controller.rb","tooltip":"/app/controllers/places_controller.rb","undoManager":{"mark":89,"position":89,"stack":[[{"start":{"row":0,"column":46},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":1,"column":0},"end":{"row":1,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":1,"column":4},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":1,"column":4},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":["v"],"id":5}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"remove","lines":["v"],"id":6}],[{"start":{"row":2,"column":4},"end":{"row":104,"column":5},"action":"insert","lines":[" before_action :api_authenticate, only: [:create, :update, :destroy]","  before_action :offset_params, only: [:index]","  ","  def index","    #Visar samtliga turistattraktioner skapade av en viss användare,","    if params[:user_id].present?","      @user = User.find(params[:user_id])","      @attractions = @user.attractions.limit(@limit).offset(@offset)","    #samtliga turistattraktioner tillhörande en viss tagg,","    elsif params[:tag_id].present?","      @tag = Tag.find(params[:tag_id])","      @attractions = @tag.attractions.limit(@limit).offset(@offset)","    #samtliga turistattraktioner som inte ligger längre än 80 km ifrån en viss plats (URL .../attractions?latitude=värde&longitude=värde),","    elsif params[:latitude].present? && params[:longitude].present?","      #Metod från gem Geocoder","      @attractions = Attraction.limit(@limit).offset(@offset).near([params[:latitude], params[:longitude]], 80, :units => :km)","    #samtliga turistattraktioner som har ett namn liknande det som skickats med (URL .../attractions?address=värde)","    elsif params[:address].present?","      address_param = params[:address]","      @attractions = Attraction.limit(@limit).offset(@offset).where(\"address LIKE (?)\", \"%#{address_param}%\")","    #eller samtliga turistattraktioner sorterade enligt senaste datum","    else","      @attractions = Attraction.limit(@limit).offset(@offset).all.order(\"created_at DESC\")","    end","    respond_with @attractions","  end","  ","  #Visar en enskild turistattraktion","  def show","    @attraction = Attraction.find(params[:id])","    render json: @attraction, :include => :tags","  end","  ","  #Skapar ny turistattraktion","  def create","    attraction = Attraction.new(attraction_params)","    ","    attraction.user_id = @token_payload[\"user_id\"]","    ","    if attraction.save","      respond_with attraction, status: :created","    else","      error = ErrorMessage.new(\"Resursen kunde inte skapas\", \"Turistattraktionen kunde inte skapas\")","      render json: error, status: :bad_request","    end","  end","  ","  #Uppdaterar en turistattraktion","  def update","    attraction = Attraction.find_by_id(params[:id].to_i)","    ","    if attraction","      attraction.tags.delete_all","      user = attraction.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","        attraction.update(attraction_params)","        if attraction.save","          render json: attraction, status: :ok","        else","          error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte uppdatera denna resurs.\", \"Du får inte uppdatera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end","  ","  #Raderar en turistattraktion","  def destroy","    attraction = Attraction.find_by_id(params[:id].to_i)","    ","    if attraction","      user = attraction.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","        if attraction.destroy","          respond_with status: :no_content","        else","          error = ErrorMessage.new(\"Resursen kunde inte raderas\", \"Turistattraktionen kunde inte raderas\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte radera denna resurs.\", \"Du får inte radera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end","  ","  private","  ","  def attraction_params","    json_params = ActionController::Parameters.new(JSON.parse(request.body.read))","    json_params.require(:attraction).permit(:address, :latitude, :longitude, tag_ids: [] )","  end"],"id":7}],[{"start":{"row":9,"column":7},"end":{"row":9,"column":18},"action":"remove","lines":["attractions"],"id":8},{"start":{"row":9,"column":7},"end":{"row":9,"column":13},"action":"insert","lines":["places"]}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":18},"action":"remove","lines":["attractions"],"id":10},{"start":{"row":13,"column":7},"end":{"row":13,"column":13},"action":"insert","lines":["places"]}],[{"start":{"row":17,"column":7},"end":{"row":17,"column":18},"action":"remove","lines":["attractions"],"id":11},{"start":{"row":17,"column":7},"end":{"row":17,"column":13},"action":"insert","lines":["places"]}],[{"start":{"row":21,"column":7},"end":{"row":21,"column":18},"action":"remove","lines":["attractions"],"id":12},{"start":{"row":21,"column":7},"end":{"row":21,"column":13},"action":"insert","lines":["places"]}],[{"start":{"row":24,"column":7},"end":{"row":24,"column":18},"action":"remove","lines":["attractions"],"id":13},{"start":{"row":24,"column":7},"end":{"row":24,"column":13},"action":"insert","lines":["places"]}],[{"start":{"row":26,"column":18},"end":{"row":26,"column":29},"action":"remove","lines":["attractions"],"id":14},{"start":{"row":26,"column":18},"end":{"row":26,"column":24},"action":"insert","lines":["places"]}],[{"start":{"row":13,"column":21},"end":{"row":13,"column":32},"action":"remove","lines":["attractions"],"id":15},{"start":{"row":13,"column":21},"end":{"row":13,"column":27},"action":"insert","lines":["places"]}],[{"start":{"row":18,"column":89},"end":{"row":18,"column":100},"action":"remove","lines":["attractions"],"id":16},{"start":{"row":18,"column":89},"end":{"row":18,"column":95},"action":"insert","lines":["places"]}],[{"start":{"row":14,"column":94},"end":{"row":14,"column":105},"action":"remove","lines":["attractions"],"id":17},{"start":{"row":14,"column":94},"end":{"row":14,"column":100},"action":"insert","lines":["places"]}],[{"start":{"row":9,"column":22},"end":{"row":9,"column":33},"action":"remove","lines":["attractions"],"id":18},{"start":{"row":9,"column":22},"end":{"row":9,"column":28},"action":"insert","lines":["places"]}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":26},"action":"remove","lines":["Attraction"],"id":19},{"start":{"row":17,"column":16},"end":{"row":17,"column":22},"action":"insert","lines":["places"]}],[{"start":{"row":17,"column":21},"end":{"row":17,"column":22},"action":"remove","lines":["s"],"id":20}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":17},"action":"remove","lines":["p"],"id":21}],[{"start":{"row":17,"column":16},"end":{"row":17,"column":17},"action":"insert","lines":["P"],"id":22}],[{"start":{"row":21,"column":16},"end":{"row":21,"column":26},"action":"remove","lines":["Attraction"],"id":24},{"start":{"row":21,"column":16},"end":{"row":21,"column":21},"action":"insert","lines":["Place"]}],[{"start":{"row":24,"column":16},"end":{"row":24,"column":26},"action":"remove","lines":["Attraction"],"id":25},{"start":{"row":24,"column":16},"end":{"row":24,"column":21},"action":"insert","lines":["Place"]}],[{"start":{"row":31,"column":18},"end":{"row":31,"column":28},"action":"remove","lines":["Attraction"],"id":26},{"start":{"row":31,"column":18},"end":{"row":31,"column":23},"action":"insert","lines":["Place"]}],[{"start":{"row":37,"column":17},"end":{"row":37,"column":27},"action":"remove","lines":["Attraction"],"id":27},{"start":{"row":37,"column":17},"end":{"row":37,"column":22},"action":"insert","lines":["Place"]}],[{"start":{"row":31,"column":5},"end":{"row":31,"column":15},"action":"remove","lines":["attraction"],"id":28},{"start":{"row":31,"column":5},"end":{"row":31,"column":10},"action":"insert","lines":["Place"]}],[{"start":{"row":31,"column":5},"end":{"row":31,"column":6},"action":"remove","lines":["P"],"id":29}],[{"start":{"row":31,"column":5},"end":{"row":31,"column":6},"action":"insert","lines":["p"],"id":30}],[{"start":{"row":32,"column":18},"end":{"row":32,"column":28},"action":"remove","lines":["attraction"],"id":31},{"start":{"row":32,"column":18},"end":{"row":32,"column":24},"action":"insert","lines":["place "]}],[{"start":{"row":37,"column":4},"end":{"row":37,"column":14},"action":"remove","lines":["attraction"],"id":32},{"start":{"row":37,"column":4},"end":{"row":37,"column":10},"action":"insert","lines":["place "]}],[{"start":{"row":39,"column":4},"end":{"row":39,"column":14},"action":"remove","lines":["attraction"],"id":33},{"start":{"row":39,"column":4},"end":{"row":39,"column":10},"action":"insert","lines":["place "]}],[{"start":{"row":41,"column":7},"end":{"row":41,"column":17},"action":"remove","lines":["attraction"],"id":34},{"start":{"row":41,"column":7},"end":{"row":41,"column":13},"action":"insert","lines":["place "]}],[{"start":{"row":37,"column":23},"end":{"row":37,"column":33},"action":"remove","lines":["attraction"],"id":35},{"start":{"row":37,"column":23},"end":{"row":37,"column":29},"action":"insert","lines":["place "]}],[{"start":{"row":42,"column":19},"end":{"row":42,"column":29},"action":"remove","lines":["attraction"],"id":36},{"start":{"row":42,"column":19},"end":{"row":42,"column":25},"action":"insert","lines":["place "]}],[{"start":{"row":51,"column":4},"end":{"row":51,"column":14},"action":"remove","lines":["attraction"],"id":37},{"start":{"row":51,"column":4},"end":{"row":51,"column":10},"action":"insert","lines":["place "]}],[{"start":{"row":53,"column":7},"end":{"row":53,"column":17},"action":"remove","lines":["attraction"],"id":41},{"start":{"row":53,"column":7},"end":{"row":53,"column":13},"action":"insert","lines":["place "]}],[{"start":{"row":42,"column":24},"end":{"row":42,"column":25},"action":"remove","lines":[" "],"id":42}],[{"start":{"row":41,"column":12},"end":{"row":41,"column":13},"action":"remove","lines":[" "],"id":43}],[{"start":{"row":39,"column":9},"end":{"row":39,"column":10},"action":"remove","lines":[" "],"id":44}],[{"start":{"row":37,"column":10},"end":{"row":37,"column":11},"action":"remove","lines":[" "],"id":45}],[{"start":{"row":37,"column":27},"end":{"row":37,"column":28},"action":"remove","lines":[" "],"id":46}],[{"start":{"row":17,"column":13},"end":{"row":17,"column":14},"action":"remove","lines":[" "],"id":47}],[{"start":{"row":17,"column":13},"end":{"row":17,"column":14},"action":"insert","lines":[" "],"id":48}],[{"start":{"row":51,"column":13},"end":{"row":51,"column":23},"action":"remove","lines":["Attraction"],"id":51},{"start":{"row":51,"column":13},"end":{"row":51,"column":18},"action":"insert","lines":["Place"]}],[{"start":{"row":55,"column":13},"end":{"row":55,"column":23},"action":"remove","lines":["attraction"],"id":52},{"start":{"row":55,"column":13},"end":{"row":55,"column":18},"action":"insert","lines":["Place"]}],[{"start":{"row":55,"column":13},"end":{"row":55,"column":14},"action":"remove","lines":["P"],"id":53}],[{"start":{"row":55,"column":13},"end":{"row":55,"column":14},"action":"insert","lines":["p"],"id":54}],[{"start":{"row":58,"column":7},"end":{"row":58,"column":18},"action":"remove","lines":[" attraction"],"id":55},{"start":{"row":58,"column":7},"end":{"row":58,"column":12},"action":"insert","lines":["place"]}],[{"start":{"row":59,"column":11},"end":{"row":59,"column":21},"action":"remove","lines":["attraction"],"id":56},{"start":{"row":59,"column":11},"end":{"row":59,"column":16},"action":"insert","lines":["place"]}],[{"start":{"row":60,"column":23},"end":{"row":60,"column":33},"action":"remove","lines":["attraction"],"id":57},{"start":{"row":60,"column":23},"end":{"row":60,"column":28},"action":"insert","lines":["place"]}],[{"start":{"row":77,"column":4},"end":{"row":77,"column":14},"action":"remove","lines":["attraction"],"id":58},{"start":{"row":77,"column":4},"end":{"row":77,"column":9},"action":"insert","lines":["place"]}],[{"start":{"row":77,"column":12},"end":{"row":77,"column":22},"action":"remove","lines":["Attraction"],"id":59},{"start":{"row":77,"column":12},"end":{"row":77,"column":17},"action":"insert","lines":["place"]}],[{"start":{"row":77,"column":12},"end":{"row":77,"column":13},"action":"remove","lines":["p"],"id":60}],[{"start":{"row":77,"column":12},"end":{"row":77,"column":13},"action":"insert","lines":["P"],"id":61}],[{"start":{"row":79,"column":7},"end":{"row":79,"column":17},"action":"remove","lines":["attraction"],"id":62},{"start":{"row":79,"column":7},"end":{"row":79,"column":12},"action":"insert","lines":["place"]}],[{"start":{"row":80,"column":13},"end":{"row":80,"column":23},"action":"remove","lines":["attraction"],"id":63},{"start":{"row":80,"column":13},"end":{"row":80,"column":18},"action":"insert","lines":["place"]}],[{"start":{"row":83,"column":11},"end":{"row":83,"column":21},"action":"remove","lines":["attraction"],"id":64},{"start":{"row":83,"column":11},"end":{"row":83,"column":16},"action":"insert","lines":["place"]}],[{"start":{"row":101,"column":6},"end":{"row":101,"column":16},"action":"remove","lines":["attraction"],"id":65},{"start":{"row":101,"column":6},"end":{"row":101,"column":11},"action":"insert","lines":["place"]}],[{"start":{"row":58,"column":20},"end":{"row":58,"column":30},"action":"remove","lines":["attraction"],"id":66},{"start":{"row":58,"column":20},"end":{"row":58,"column":25},"action":"insert","lines":["place"]}],[{"start":{"row":103,"column":25},"end":{"row":103,"column":35},"action":"remove","lines":["attraction"],"id":69},{"start":{"row":103,"column":25},"end":{"row":103,"column":30},"action":"insert","lines":["place"]}],[{"start":{"row":49,"column":0},"end":{"row":49,"column":33},"action":"remove","lines":["  #Uppdaterar en turistattraktion"],"id":70}],[{"start":{"row":35,"column":0},"end":{"row":35,"column":29},"action":"remove","lines":["  #Skapar ny turistattraktion"],"id":71}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":36},"action":"remove","lines":["  #Visar en enskild turistattraktion"],"id":72}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":69},"action":"remove","lines":["    #eller samtliga turistattraktioner sorterade enligt senaste datum"],"id":73}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":110},"action":"remove","lines":["    #samtliga turistattraktioner som har ett namn liknande det som skickats med (URL .../places?address=värde)"],"id":74}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":30},"action":"remove","lines":["      #Metod från gem Geocoder"],"id":75}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":133},"action":"remove","lines":["    #samtliga turistattraktioner som inte ligger längre än 80 km ifrån en viss plats (URL .../places?latitude=värde&longitude=värde),"],"id":76}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":58},"action":"remove","lines":["    #samtliga turistattraktioner tillhörande en viss tagg,"],"id":77}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":68},"action":"remove","lines":["    #Visar samtliga turistattraktioner skapade av en viss användare,"],"id":78}],[{"start":{"row":75,"column":0},"end":{"row":75,"column":30},"action":"remove","lines":["  #Raderar en turistattraktion"],"id":79}],[{"start":{"row":76,"column":0},"end":{"row":97,"column":5},"action":"remove","lines":["  def destroy","    place = Place.find_by_id(params[:id].to_i)","    ","    if place","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","        if place.destroy","          respond_with status: :no_content","        else","          error = ErrorMessage.new(\"Resursen kunde inte raderas\", \"Turistattraktionen kunde inte raderas\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte radera denna resurs.\", \"Du får inte radera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":80}],[{"start":{"row":48,"column":2},"end":{"row":49,"column":0},"action":"insert","lines":["",""],"id":81},{"start":{"row":49,"column":0},"end":{"row":49,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":49,"column":2},"end":{"row":70,"column":5},"action":"insert","lines":["  def destroy","    place = Place.find_by_id(params[:id].to_i)","    ","    if place","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","        if place.destroy","          respond_with status: :no_content","        else","          error = ErrorMessage.new(\"Resursen kunde inte raderas\", \"Turistattraktionen kunde inte raderas\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte radera denna resurs.\", \"Du får inte radera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":82}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"remove","lines":[" "],"id":83}],[{"start":{"row":2,"column":2},"end":{"row":2,"column":4},"action":"remove","lines":["  "],"id":84}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":2},"action":"remove","lines":["  "],"id":85}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":[" "],"id":86}],[{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":[" "],"id":87}],[{"start":{"row":30,"column":0},"end":{"row":34,"column":2},"action":"remove","lines":["  def show","    @place = Place.find(params[:id])","    render json: @place , :include => :tags","  end","  "],"id":88}],[{"start":{"row":43,"column":5},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":89},{"start":{"row":44,"column":0},"end":{"row":44,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":44,"column":2},"end":{"row":45,"column":0},"action":"insert","lines":["",""],"id":90},{"start":{"row":45,"column":0},"end":{"row":45,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":45,"column":2},"end":{"row":49,"column":2},"action":"insert","lines":["  def show","    @place = Place.find(params[:id])","    render json: @place , :include => :tags","  end","  "],"id":91}],[{"start":{"row":74,"column":1},"end":{"row":97,"column":5},"action":"remove","lines":[" def update","    place  = Place.find_by_id(params[:id].to_i)","    ","    if place ","      attraction.tags.delete_all","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","       place.update(place_params)","        if place.save","          render json: place, status: :ok","        else","          error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte uppdatera denna resurs.\", \"Du får inte uppdatera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":92}],[{"start":{"row":29,"column":0},"end":{"row":52,"column":5},"action":"insert","lines":[" def update","    place  = Place.find_by_id(params[:id].to_i)","    ","    if place ","      attraction.tags.delete_all","      user = place.user","      ","      if @token_payload[\"user_id\"].to_i == user.id","       place.update(place_params)","        if place.save","          render json: place, status: :ok","        else","          error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","          render json: error, status: :bad_request","        end","      else","        error = ErrorMessage.new(\"Du får inte uppdatera denna resurs.\", \"Du får inte uppdatera denna turistattraktion.\")","        render json: error, status: :forbidden","      end","    else","      error = ErrorMessage.new(\"Resursen kunde inte uppdateras\", \"Turistattraktionen kunde inte uppdateras\")","      render json: error, status: :bad_request","    end","  end"],"id":93}],[{"start":{"row":28,"column":2},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":94},{"start":{"row":29,"column":0},"end":{"row":29,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":99,"column":2},"end":{"row":100,"column":0},"action":"remove","lines":["",""],"id":95}],[{"start":{"row":99,"column":0},"end":{"row":99,"column":2},"action":"remove","lines":["  "],"id":96}],[{"start":{"row":98,"column":1},"end":{"row":99,"column":0},"action":"remove","lines":["",""],"id":97}],[{"start":{"row":98,"column":0},"end":{"row":98,"column":1},"action":"remove","lines":[" "],"id":98}],[{"start":{"row":97,"column":0},"end":{"row":98,"column":0},"action":"remove","lines":["",""],"id":99}],[{"start":{"row":96,"column":5},"end":{"row":97,"column":0},"action":"remove","lines":["",""],"id":100}]]},"ace":{"folds":[],"scrolltop":840,"scrollleft":0,"selection":{"start":{"row":97,"column":0},"end":{"row":97,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1456259143373,"hash":"b22352dc652e2ff80ae81cf94d2cf8b0b0397cb4"}